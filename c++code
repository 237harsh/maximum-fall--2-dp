class Solution {
public:int sum(int i,int j,int n,vector<vector<int>>&dp,vector<vector<int>>& arr)
{
    if(i==n-1)return arr[i][j];
    if(dp[i][j]!=-1)return dp[i][j];
    int a=INT_MAX;
    for(int k=0;k<n;k++)
    {
        if(k!=j)
        {
            a= min(a,(sum(i+1,k,n,dp,arr)+arr[i][j]));
        }
    }
   return dp[i][j]=a;
}
    int minFallingPathSum(vector<vector<int>>& arr) {
        int n=arr.size();
         vector<vector<int>>dp(n,vector<int>(n,-1));
        
        int a=INT_MAX;
        for(int i=0;i<n;i++)
        {
            a=min(a,sum(0,i,n,dp,arr));
        }
        return a;
    }
};
